{"version":3,"sources":["webpack:///./src/components/post.js","webpack:///./src/pages/index.js"],"names":["Container","styled","div","withConfig","displayName","componentId","media","phone","_templateObject","Title","h4","Post","_ref","node","react_default","a","createElement","styled_link","to","fields","slug","frontmatter","title","date","readingTime","text","dangerouslySetInnerHTML","__html","excerpt","propTypes","PropTypes","shape","id","string","isRequired","h3","pages_templateObject","BlogIndex","render","posts","this","props","data","allMarkdownRemark","edges","layout","seo","keywords","bio","pages_Title","map","post","key","Component","pageQuery"],"mappings":"6UAOA,IAAMA,EAAYC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,iEAQXK,IAAMC,MARKC,MAcTC,EAAQR,IAAOS,GAAVP,WAAA,CAAAC,YAAA,cAAAC,YAAA,gBAAGJ,CAAH,4CAKLU,EAAO,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACXC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYC,GAAIL,EAAKM,OAAOC,MAC1BN,EAAAC,EAAAC,cAAChB,EAAD,KACEc,EAAAC,EAAAC,cAACP,EAAD,KAAQI,EAAKQ,YAAYC,OACzBR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kBAAUH,EAAKQ,YAAYE,MAC3BT,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,YAAOH,EAAKM,OAAOK,YAAYC,OAEjCX,EAAAC,EAAAC,cAAA,KAAGU,wBAAyB,CAAEC,OAAQd,EAAKe,cAKjDjB,EAAKkB,UAAY,CACfhB,KAAMiB,IAAUC,MAAM,CACpBC,GAAIF,IAAUG,OAAOC,WACrBb,YAAaS,IAAUC,MAAM,CAC3BT,MAAOQ,IAAUG,OAAOC,WACxBX,KAAMO,IAAUG,OAAOC,aAEzBf,OAAQW,IAAUC,MAAM,CACtBX,KAAMU,IAAUG,OAAOC,aAEzBN,QAASE,IAAUG,OAAOC,cAIfvB,wIC5Cf,IAAMF,EAAQR,IAAOkC,GAAVhC,WAAA,CAAAC,YAAA,eAAAC,YAAA,YAAGJ,CAAH,yDAKPK,IAAMC,MALC6B,MAULC,4FACJC,OAAA,WAAS,IAEDC,EADWC,KAAKC,MAAdC,KACWC,kBAAkBC,MACrC,OACE9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACE/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAKxB,MAAM,YAAYyB,SAAU,4BACjCjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,MACAlC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACiC,EAAD,qBACCV,EAAMW,IAAI,SAAAtC,GAAc,IAAXC,EAAWD,EAAXC,KACZ,OAAOC,EAAAC,EAAAC,cAACmC,EAAD,CAAMC,IAAKvC,EAAKmB,GAAInB,KAAMA,YAXrBwC,aAqBXC,GAFEjB,YAEO","file":"component---src-pages-index-js-bc6a9f83fd022b22768a.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport StyledLink from \"../utils/styled-link\";\nimport media from \"../utils/media\";\n\nconst Container = styled.div`\n  padding: 1rem 0;\n  margin: 1rem 0;\n\n  &:first-child {\n    margin-top: 0;\n  }\n\n  ${media.phone`\n    margin: 0.5rem 0;\n    padding: 0.4rem 0;\n  `}\n`;\n\nconst Title = styled.h4`\n  margin-bottom: 0.2rem;\n  font-size: 2.2rem;\n`;\n\nconst Post = ({ node }) => (\n  <StyledLink to={node.fields.slug}>\n    <Container>\n      <Title>{node.frontmatter.title}</Title>\n      <sub>\n        <span>on {node.frontmatter.date}</span>\n        <span>&nbsp; - &nbsp;</span>\n        <span>{node.fields.readingTime.text}</span>\n      </sub>\n      <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n    </Container>\n  </StyledLink>\n);\n\nPost.propTypes = {\n  node: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired\n    }),\n    fields: PropTypes.shape({\n      slug: PropTypes.string.isRequired\n    }),\n    excerpt: PropTypes.string.isRequired\n  })\n};\n\nexport default Post;\n","import React, { Component } from \"react\";\nimport { graphql } from \"gatsby\";\nimport styled from \"styled-components\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Bio from \"../components/bio\";\nimport Post from \"../components/post\";\nimport media from \"../utils/media\";\n\nconst Title = styled.h3`\n  font-weight: 800;\n  font-size: 2.6rem;\n  margin: 6rem 0 0;\n\n  ${media.phone`\n    margin: 3rem 0 0;\n  `}\n`;\n\nclass BlogIndex extends Component {\n  render() {\n    const { data } = this.props;\n    const posts = data.allMarkdownRemark.edges;\n    return (\n      <Layout>\n        <SEO title=\"All Posts\" keywords={[`gatsby`, `blog`, `react`]} />\n        <Bio />\n        <main>\n          <Title>Latest Posts</Title>\n          {posts.map(({ node }) => {\n            return <Post key={node.id} node={node} />;\n          })}\n        </main>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { ne: true } } }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 160)\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}